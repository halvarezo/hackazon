openapi: 3.0.1
info:
  title: Hackazon Mobile API
  description: "#### Shopping API for Hackazon: Android mobile Application \n"
  version: 1.0.0
servers:
- url: http://hackazon.lab.local
paths:
  /api/auth:
    get:
      description: Authentication requests
      responses:
        200:
          description: Response will be in JSON
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthResponse'
      security:
      - basicAuth: []
  /api/category:
    get:
      description: Get lists of products by category
      parameters:
      - name: Authorization
        in: header
        description: 'In the form of: Token kjs879sad78f9sd87f'
        schema:
          pattern: Token \w+
          type: string
      - name: page
        in: query
        description: Current page of results. Default is 1
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number to show per page of results
        schema:
          type: integer
      responses:
        200:
          description: Response will be in JSON
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenericResponse'
      security:
      - apiKey: []
  /api/product:
    get:
      description: Get lists of products by category
      parameters:
      - name: Authorization
        in: header
        description: 'In the form of: Token kjs879sad78f9sd87f'
        schema:
          pattern: Token \w+
          type: string
      - name: page
        in: query
        description: Current page of results. Default is 1
        schema:
          type: integer
      - name: categoryID
        in: query
        description: Category ID
        schema:
          type: integer
      responses:
        200:
          description: Response will be in JSON
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenericResponse'
      security:
      - apiKey: []
  /api/product/{product_id}:
    get:
      description: Get a product from it's ID
      parameters:
      - name: Authorization
        in: header
        description: 'In the form of: Token kjs879sad78f9sd87f'
        schema:
          pattern: Token \w+
          type: string
      - name: product_id
        in: path
        description: ID of product that needs to be fetched
        required: true
        schema:
          type: integer
          format: int64
      - name: categoryID
        in: query
        description: Category ID
        schema:
          type: integer
      responses:
        200:
          description: Response will be in JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
      security:
      - apiKey: []
  /api/cartItems:
    post:
      description: Adds an item to the cart
      parameters:
      - name: Authorization
        in: header
        description: 'In the form of: Token kjs879sad78f9sd87f'
        required: true
        schema:
          pattern: Token \w+
          type: string
      - name: uid
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
        required: true
      responses:
        200:
          description: Response will be in JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
      x-codegen-request-body-name: body
  /api/customerAddress:
    get:
      description: Get lists of products by category
      parameters:
      - name: Authorization
        in: header
        description: 'In the form of: Token kjs879sad78f9sd87f'
        required: true
        schema:
          pattern: Token \w+
          type: string
      - name: page
        in: query
        description: Current page of results. Default is 1
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number to show per page of results
        schema:
          type: integer
      responses:
        200:
          description: Response will be in JSON
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenericResponse'
    post:
      description: Adds a new customer address
      parameters:
      - name: Authorization
        in: header
        description: 'In the form of: Token kjs879sad78f9sd87f'
        required: true
        schema:
          pattern: Token \w+
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAddress'
        required: true
      responses:
        200:
          description: Response will be in JSON
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerAddress'
      x-codegen-request-body-name: body
  /api/cart/my:
    get:
      description: Get lists of products by category
      parameters:
      - name: Authorization
        in: header
        description: 'In the form of: Token kjs879sad78f9sd87f'
        required: true
        schema:
          pattern: Token \w+
          type: string
      - name: uid
        in: query
        description: Session based web application scanning with tweaks.
        schema:
          type: string
      responses:
        200:
          description: Response will be in JSON
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartResponse'
  /api/cart/{cart_id}:
    get:
      description: Get Cart by ID
      parameters:
      - name: Authorization
        in: header
        description: 'In the form of: Token kjs879sad78f9sd87f'
        required: true
        schema:
          pattern: Token \w+
          type: string
      - name: cart_id
        in: path
        description: cart id that is being updated
        required: true
        schema:
          type: string
      responses:
        200:
          description: Response will be in JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartResponse'
    put:
      description: Update Cart by ID
      parameters:
      - name: Authorization
        in: header
        description: 'In the form of: Token kjs879sad78f9sd87f'
        required: true
        schema:
          pattern: Token \w+
          type: string
      - name: cart_id
        in: path
        description: cart id that is being updated
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartResponse'
        required: true
      responses:
        200:
          description: Response will be in JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartResponse'
      x-codegen-request-body-name: body
    delete:
      description: Get lists of products by category
      parameters:
      - name: Authorization
        in: header
        description: 'In the form of: Token kjs879sad78f9sd87f'
        required: true
        schema:
          pattern: Token \w+
          type: string
      - name: cart_id
        in: path
        description: cart id that is being updated
        required: true
        schema:
          type: string
      responses:
        200:
          description: Response will be in JSON
          content: {}
  /api/order:
    get:
      description: Gets all orders.
      parameters:
      - name: Authorization
        in: header
        description: 'In the form of: Token kjs879sad78f9sd87f'
        required: true
        schema:
          pattern: Token \w+
          type: string
      - name: page
        in: query
        description: Current page of results. Default is 1
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number to show per page of results
        schema:
          type: integer
      responses:
        200:
          description: Response will be in JSON
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      description: Creates an order
      parameters:
      - name: Authorization
        in: header
        description: 'In the form of: Token kjs879sad78f9sd87f'
        required: true
        schema:
          pattern: Token \w+
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        200:
          description: Response will be in JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      x-codegen-request-body-name: body
  /api/order/{order_id}:
    get:
      description: Gets an order by ID.
      parameters:
      - name: Authorization
        in: header
        description: 'In the form of: Token kjs879sad78f9sd87f'
        required: true
        schema:
          pattern: Token \w+
          type: string
      - name: page
        in: query
        description: Current page of results. Default is 1
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number to show per page of results
        schema:
          type: integer
      - name: order_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Response will be in JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /api/orderAddresses:
    post:
      description: Creates an order
      parameters:
      - name: Authorization
        in: header
        description: 'In the form of: Token kjs879sad78f9sd87f'
        required: true
        schema:
          pattern: Token \w+
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAddress'
        required: true
      responses:
        200:
          description: Response will be in JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderAddress'
      x-codegen-request-body-name: body
  /api/orderItems:
    post:
      description: Adds an item to an order
      parameters:
      - name: Authorization
        in: header
        description: 'In the form of: Token kjs879sad78f9sd87f'
        required: true
        schema:
          pattern: Token \w+
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
        required: true
      responses:
        200:
          description: Response will be in JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
      x-codegen-request-body-name: body
  /api/user/me:
    get:
      description: Get current users profile data
      parameters:
      - name: Authorization
        in: header
        description: 'In the form of: Token kjs879sad78f9sd87f'
        required: true
        schema:
          pattern: Token \w+
          type: string
      responses:
        200:
          description: Response will be in JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileData'
  /api/user/{user_id}:
    put:
      description: update a users data.
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileData'
        required: false
      responses:
        200:
          description: Response will be in JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileData'
      x-codegen-request-body-name: body
  /api/contactMessages:
    post:
      description: Send a contact message.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactMessage'
        required: false
      responses:
        200:
          description: Response will be in JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactMessage'
      x-codegen-request-body-name: body
components:
  schemas:
    AuthResponse:
      type: object
      properties:
        message:
          type: string
          description: Status message
        code:
          type: integer
          description: HTTP response code
        trace:
          type: string
          description: To be defined
        token:
          type: string
          description: Session token to be used by all other requests
    Cart:
      type: object
      properties:
        cart_id:
          type: integer
        created_at:
          type: string
        updated_at:
          type: string
        name:
          type: string
        product_id:
          type: integer
        id:
          type: string
        price:
          type: string
        qty:
          type: integer
    CartResponse:
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
        updated_at:
          type: string
        items_count:
          type: integer
        items_qty:
          type: integer
        total_price:
          type: integer
        uid:
          type: string
        customer_id:
          type: string
        customer_email:
          type: string
        customer_is_guest:
          type: string
        payment_method:
          type: string
        shipping_method:
          type: string
        shipping_address_id:
          type: string
        billing_address_id:
          type: string
        last_step:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItemResponse'
    CartItemResponse:
      type: object
      properties:
        id:
          type: string
        cart_id:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        product_id:
          type: string
        name:
          type: string
        qty:
          type: string
        price:
          type: string
    ContactMessage:
      type: object
      properties:
        created_at:
          type: string
        customer_id:
          type: string
        email:
          type: string
        message:
          type: string
        name:
          type: string
        phone:
          type: string
        id:
          type: string
    CustomerAddress:
      type: object
      properties:
        address_line_1:
          type: string
        address_line_2:
          type: string
        city:
          type: string
        country_id:
          type: string
        customer_id:
          type: integer
        full_name:
          type: string
        id:
          type: string
        phone:
          type: string
        region:
          type: string
        zip:
          type: string
    GenericResponse:
      type: object
    Order:
      type: object
      properties:
        comment:
          type: string
        coupon_id:
          type: string
        created_at:
          type: string
        customer_email:
          type: string
        customer_firstname:
          type: string
        customer_id:
          type: string
        customer_lastname:
          type: string
        discount:
          type: string
        updated_at:
          type: string
        increment_id:
          type: string
        orderAddress:
          type: array
          items:
            $ref: '#/components/schemas/OrderAddress'
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/GenericResponse'
        payment_method:
          type: string
        shipping_method:
          type: string
        status:
          type: string
        total_price:
          type: string
        id:
          type: integer
    OrderAddress:
      type: object
      properties:
        address_line_1:
          type: string
        address_line_2:
          type: string
        address_type:
          type: string
        city:
          type: string
        country_id:
          type: string
        customer_id:
          type: integer
        full_name:
          type: string
        zip:
          type: string
        order_id:
          type: integer
        phone:
          type: string
        region:
          type: string
        id:
          type: integer
    OrderItem:
      type: object
      properties:
        cart_id:
          type: integer
        created_at:
          type: string
        updated_at:
          type: string
        name:
          type: string
        order_id:
          type: integer
        product_id:
          type: integer
        price:
          type: string
        qty:
          type: integer
        id:
          type: integer
    ProductResponse:
      type: object
      properties:
        productID:
          type: integer
        categoryID:
          type: integer
        name:
          type: string
        description:
          type: string
        customers_rating:
          type: string
        Price:
          type: integer
        picture:
          type: string
        in_stock:
          type: string
        thumbnail:
          type: string
        customer_votes:
          type: integer
        items_sold:
          type: integer
        big_picture:
          type: string
        enabled:
          type: integer
        brief_description:
          type: string
        list_price:
          type: string
        product_code:
          type: string
        hurl:
          type: string
        accompanyID:
          type: string
        brandID:
          type: string
        meta_title:
          type: string
        meta_keywords:
          type: string
        meta_desc:
          type: string
        canonical:
          type: string
        h1:
          type: string
        yml:
          type: string
        min_qunatity:
          type: string
        managerID:
          type: string
    UserProfileData:
      type: object
      properties:
        id:
          type: integer
          description: User ID number
        username:
          type: string
          pattern: '^\w+$'
          minimum: 1
          maximum: 100
          description: User name.
        first_name:
          type: string
          description: Users first name.
        last_name:
          type: string
          description: Users last name.
        user_phone:
          type: string
          description: Users phone number.
        email:
          type: string
          pattern: \b[\w.%+\-]+@[\w.\-]+\.[A-Za-z]{2,10}\b
          description: Users email address.
        oauth_provider:
          type: string
          description: For OAuth integration.
        oauth_uid:
          type: string
          description: For OAuth integration..
        created_on:
          type: string
          description: Date account was created.
        last_login:
          type: string
          description: Date of last login.
        active:
          type: string
          description: User has active account.
        photo:
          type: string
          description: Users profile photo..
        photoUrl:
          type: string
          description: Users profile photo..
  securitySchemes:
    basicAuth:
      type: http
      description: HTTP Basic Authentication.
      scheme: basic
    apiKey:
      type: apiKey
      description: API Key
      name: Authorization
      in: header
